/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_NAKI3D_COMMON_PROTOCOL_PROTO_FILES_DISCOVERY_PB_H_INCLUDED
#define PB_NAKI3D_COMMON_PROTOCOL_PROTO_FILES_DISCOVERY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _naki3d_common_protocol_DataType {
    /* Bindable */
    naki3d_common_protocol_DataType_Void = 0,
    naki3d_common_protocol_DataType_Bool = 1,
    naki3d_common_protocol_DataType_Integer = 2,
    naki3d_common_protocol_DataType_Float = 3,
    naki3d_common_protocol_DataType_String = 4,
    /* Passthrough */
    naki3d_common_protocol_DataType_Vector2 = 5,
    naki3d_common_protocol_DataType_Vector3 = 6
} naki3d_common_protocol_DataType;

/* Struct definitions */
typedef struct _naki3d_common_protocol_AvailableSensors {
    pb_callback_t sensors;
} naki3d_common_protocol_AvailableSensors;

typedef struct _naki3d_common_protocol_SensorDescriptor {
    pb_callback_t path;
    pb_callback_t model;
    naki3d_common_protocol_DataType data_type;
} naki3d_common_protocol_SensorDescriptor;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _naki3d_common_protocol_DataType_MIN naki3d_common_protocol_DataType_Void
#define _naki3d_common_protocol_DataType_MAX naki3d_common_protocol_DataType_Vector3
#define _naki3d_common_protocol_DataType_ARRAYSIZE ((naki3d_common_protocol_DataType)(naki3d_common_protocol_DataType_Vector3+1))


#define naki3d_common_protocol_SensorDescriptor_data_type_ENUMTYPE naki3d_common_protocol_DataType


/* Initializer values for message structs */
#define naki3d_common_protocol_AvailableSensors_init_default {{{NULL}, NULL}}
#define naki3d_common_protocol_SensorDescriptor_init_default {{{NULL}, NULL}, {{NULL}, NULL}, _naki3d_common_protocol_DataType_MIN}
#define naki3d_common_protocol_AvailableSensors_init_zero {{{NULL}, NULL}}
#define naki3d_common_protocol_SensorDescriptor_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, _naki3d_common_protocol_DataType_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define naki3d_common_protocol_AvailableSensors_sensors_tag 1
#define naki3d_common_protocol_SensorDescriptor_path_tag 1
#define naki3d_common_protocol_SensorDescriptor_model_tag 2
#define naki3d_common_protocol_SensorDescriptor_data_type_tag 3

/* Struct field encoding specification for nanopb */
#define naki3d_common_protocol_AvailableSensors_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  sensors,           1)
#define naki3d_common_protocol_AvailableSensors_CALLBACK pb_default_field_callback
#define naki3d_common_protocol_AvailableSensors_DEFAULT NULL
#define naki3d_common_protocol_AvailableSensors_sensors_MSGTYPE naki3d_common_protocol_SensorDescriptor

#define naki3d_common_protocol_SensorDescriptor_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   path,              1) \
X(a, CALLBACK, SINGULAR, STRING,   model,             2) \
X(a, STATIC,   SINGULAR, UENUM,    data_type,         3)
#define naki3d_common_protocol_SensorDescriptor_CALLBACK pb_default_field_callback
#define naki3d_common_protocol_SensorDescriptor_DEFAULT NULL

extern const pb_msgdesc_t naki3d_common_protocol_AvailableSensors_msg;
extern const pb_msgdesc_t naki3d_common_protocol_SensorDescriptor_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define naki3d_common_protocol_AvailableSensors_fields &naki3d_common_protocol_AvailableSensors_msg
#define naki3d_common_protocol_SensorDescriptor_fields &naki3d_common_protocol_SensorDescriptor_msg

/* Maximum encoded size of messages (where known) */
/* naki3d_common_protocol_AvailableSensors_size depends on runtime parameters */
/* naki3d_common_protocol_SensorDescriptor_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
