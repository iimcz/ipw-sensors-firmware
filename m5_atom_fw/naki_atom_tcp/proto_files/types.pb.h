/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_NAKI3D_COMMON_PROTOCOL_PROTO_FILES_TYPES_PB_H_INCLUDED
#define PB_NAKI3D_COMMON_PROTOCOL_PROTO_FILES_TYPES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _naki3d_common_protocol_Vector3Data {
    float x;
    float y;
    float z;
} naki3d_common_protocol_Vector3Data;

typedef struct _naki3d_common_protocol_Vector2Data {
    float x;
    float y;
} naki3d_common_protocol_Vector2Data;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define naki3d_common_protocol_Vector3Data_init_default {0, 0, 0}
#define naki3d_common_protocol_Vector2Data_init_default {0, 0}
#define naki3d_common_protocol_Vector3Data_init_zero {0, 0, 0}
#define naki3d_common_protocol_Vector2Data_init_zero {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define naki3d_common_protocol_Vector3Data_x_tag 1
#define naki3d_common_protocol_Vector3Data_y_tag 2
#define naki3d_common_protocol_Vector3Data_z_tag 3
#define naki3d_common_protocol_Vector2Data_x_tag 1
#define naki3d_common_protocol_Vector2Data_y_tag 2

/* Struct field encoding specification for nanopb */
#define naki3d_common_protocol_Vector3Data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 3)
#define naki3d_common_protocol_Vector3Data_CALLBACK NULL
#define naki3d_common_protocol_Vector3Data_DEFAULT NULL

#define naki3d_common_protocol_Vector2Data_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2)
#define naki3d_common_protocol_Vector2Data_CALLBACK NULL
#define naki3d_common_protocol_Vector2Data_DEFAULT NULL

extern const pb_msgdesc_t naki3d_common_protocol_Vector3Data_msg;
extern const pb_msgdesc_t naki3d_common_protocol_Vector2Data_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define naki3d_common_protocol_Vector3Data_fields &naki3d_common_protocol_Vector3Data_msg
#define naki3d_common_protocol_Vector2Data_fields &naki3d_common_protocol_Vector2Data_msg

/* Maximum encoded size of messages (where known) */
#define naki3d_common_protocol_Vector2Data_size  10
#define naki3d_common_protocol_Vector3Data_size  15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
