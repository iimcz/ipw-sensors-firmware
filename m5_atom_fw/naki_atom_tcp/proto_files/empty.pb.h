/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_NAKI3D_COMMON_PROTOCOL_PROTO_FILES_EMPTY_PB_H_INCLUDED
#define PB_NAKI3D_COMMON_PROTOCOL_PROTO_FILES_EMPTY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _naki3d_common_protocol_Empty {
    char dummy_field;
} naki3d_common_protocol_Empty;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define naki3d_common_protocol_Empty_init_default {0}
#define naki3d_common_protocol_Empty_init_zero   {0}

/* Field tags (for use in manual encoding/decoding) */

/* Struct field encoding specification for nanopb */
#define naki3d_common_protocol_Empty_FIELDLIST(X, a) \

#define naki3d_common_protocol_Empty_CALLBACK NULL
#define naki3d_common_protocol_Empty_DEFAULT NULL

extern const pb_msgdesc_t naki3d_common_protocol_Empty_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define naki3d_common_protocol_Empty_fields &naki3d_common_protocol_Empty_msg

/* Maximum encoded size of messages (where known) */
#define naki3d_common_protocol_Empty_size        0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
